@inject ICharacterService CharacterService
@inject IAnimeService AnimeService

@page "/characters"

<ul class="list-unstyled" style="background-color: transparent; display: inline;">
    @foreach (var animeCharacter in CharacterService.AnimeCharacters)
    {
        <li class="media my-3" style="border-radius: 10px;">
            <div class="media-img-wrapper mr-2">
                <a href="/character/@animeCharacter.MalId">
                    <img class="media-img" src="@animeCharacter.ImageUrl" alt="@animeCharacter.Name" />
                </a>
            </div>
            <div class="media-body">
                <a href="/character/@animeCharacter.MalId">
                    <h4 class="mb-0">@animeCharacter.Name</h4>
                </a>
                @if(animeCharacter.Rank < animeCharacter.PreviousRank)
                {
                    <h6 class="previous-rank">Previous: @animeCharacter.PreviousRank</h6>
                }
                <h5 class="rank">Rank: @animeCharacter.Rank (@animeCharacter.Points PTS)</h5>
            </div>
        </li>
    }
</ul>

<div class="my-3">
    @foreach(var anime in AnimeService.Animes)
    {
        <li class="media my-3" style="border-radius: 10px;">
            <div class="media-img-wrapper mr-2">
                <h4 class="mb-0" style="margin: auto;">@anime.Name</h4>
            </div>
        </li>
    }
</div>

@code {
    [Parameter]
    public int? AnimeMalId { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        await AnimeService.LoadAnimes();
        await CharacterService.LoadAnimeCharacters();
    }
}
