@inject ICharacterService CharacterService

@page "/"

@if (!isPlaying)
{
    <div class="containerPlayButton">
        <div class="centeredPlayButton">
            <button class="playButton" @onclick="LoadAnime">PLAY!</button>
            <p style="font-family: 'TYPOGRAPH PRO'; text-align: center;">@loadingText</p>
        </div>       
    </div>
}
else
{
    <h1 class="appTitle">SAVE ONE/DROP ONE - ANIME EDITION!</h1>

    <figure id="images" class="characters">
        <a href="">
            <img @onclick="CharOneWin" src="@charOneImg" class="myimg" />
            <figcaption class="charText">Name: @charOneName</figcaption>
            <figcaption class="animeText">Anime: @animeOneName</figcaption>
        </a>
        <a href="">
            <img @onclick="CharTwoWin" src="@charTwoImg" class="myimg" />
            <figcaption class="charText">Name: @charTwoName</figcaption>
            <figcaption class="animeText">Anime: @animeTwoName</figcaption>
        </a>
    </figure>
}



@code
{
    protected override async Task OnInitializedAsync()
    {
        await CharacterService.LoadAnimeCharacters();
    }

    private bool isPlaying = false;
    private string loadingText = "";

    private List<AnimeTopEntry> aniList = new List<AnimeTopEntry>();

    public string charOneImg;
    public string charOneName;
    public string animeOneName;

    public string charTwoImg;
    public string charTwoName;
    public string animeTwoName;

    public CharacterEntry globCharOne;
    public CharacterEntry globCharTwo;

    public AnimeTopEntry globAniOne;
    public AnimeTopEntry globAniTwo;

    private async Task LoadAnime(MouseEventArgs e)
    {
        IJikan jikan = new Jikan();
        /*var anime = await jikan.GetCharacter(2);
        charOneImg = anime.ImageURL;
        charOneName = anime.Name;
        animeOneName = anime.NameKanji;*/
        loadingText = "Loading... Please wait";
        for (int i = 1; i <= 1; i++)
        {
            var animes = await jikan.GetAnimeTop(i);
            foreach (var anime in animes.Top)
            {
                if(anime.Type == "TV")
                {
                    if(anime.Title.Contains("Season") || anime.Title.Contains("Zoku") || anime.Title.Contains("Part") || anime.Title.Contains("Enchousen") || anime.Title.Contains("Gintama'"))
                    {
                        Console.WriteLine("Anime has been omitted because it is a sequel to another anime.");
                    }
                    else
                    {
                        aniList.Add(anime);
                    }
                }
            }
        }

        isPlaying = true;

        await PlayGame();
    }

    private async Task CharOneWin(MouseEventArgs e)
    {
        await AddPoints(globCharOne, globAniOne);

        await PlayGame();
    }

    private async Task CharTwoWin(MouseEventArgs e)
    {
        await AddPoints(globCharTwo, globAniTwo);

        await PlayGame();
    }

    private async Task AddPoints(CharacterEntry winningChar, AnimeTopEntry winningAnime)
    {
        var animeCharacter = new AnimeCharacter()
        {
            MalId = Convert.ToInt32(winningChar.MalId),
            Name = winningChar.Name,
            AnimeMalId = Convert.ToInt32(winningAnime.MalId),
            ImageUrl = winningChar.ImageURL,
            Rank = 100,
            PreviousRank = 100,
        };

        if(CharacterService.AnimeCharacters
            .Contains(
            CharacterService
            .AnimeCharacters
            .FirstOrDefault(c => c.MalId == animeCharacter.MalId)
            ))
        {
            var myWinChar = await CharacterService.GetAnimeCharacter(animeCharacter.MalId);
            animeCharacter.Points = myWinChar.Points + 1;
            animeCharacter.Rank = myWinChar.Rank;
            animeCharacter.PreviousRank = myWinChar.PreviousRank;
            await CharacterService.UpdateAnimeCharacter(animeCharacter);
        }
        else
        {
            animeCharacter.Points = 1;
            await CharacterService.CreateAnimeCharacter(animeCharacter);
        }
    }

    private async Task PlayGame()
    {
        IJikan jikan = new Jikan();
        Task[] tasks = new Task[2];
        Random r = new Random();

        int indexOne = r.Next(0, aniList.Count);
        int indexTwo = r.Next(0, aniList.Count);

        tasks[0] = GetFirstChar(indexOne, jikan, r);
        tasks[1] = GetScndChar(indexTwo, jikan, r);

        await Task.WhenAll(tasks);
    }

    private async Task GetFirstChar(int index, IJikan jikan, Random r)
    {
        var anime = aniList[index];

        var charStaff = await jikan.GetAnimeCharactersStaff(anime.MalId);
        List<CharacterEntry> charList = new List<CharacterEntry>();

        foreach (var character in charStaff.Characters)
        {
            if (character.ImageURL.Contains("questionmark"))
            {
                Console.WriteLine("Character has no image...");
            }
            else
            {
                charList.Add(character);
            }
        }

        var rCharIndex = r.Next(0, charList.Count);
        var charOne = charList[rCharIndex];
        globCharOne = charOne;
        globAniOne = anime;
        charOneImg = charOne.ImageURL;
        charOneName = charOne.Name;
        animeOneName = anime.Title;
    }

    private async Task GetScndChar(int index, IJikan jikan, Random r)
    {
        var anime = aniList[index];

        var charStaff = await jikan.GetAnimeCharactersStaff(anime.MalId);
        List<CharacterEntry> charList = new List<CharacterEntry>();

        foreach (var character in charStaff.Characters)
        {
            if (character.ImageURL.Contains("questionmark"))
            {
                Console.WriteLine("Character has no image...");
            }
            else
            {
                    charList.Add(character);
            }
        }

        var rCharIndex = r.Next(0, charList.Count);
        var charTwo = charList[rCharIndex];
        globCharTwo = charTwo;
        globAniTwo = anime;
        charTwoImg = charTwo.ImageURL;
        charTwoName = charTwo.Name;
        animeTwoName = anime.Title;
    }
}